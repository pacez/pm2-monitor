{"version":3,"sources":["util/constants.js","util/request.js","components/Loading/index.js","components/Log/index.js","pages/Home/index.js","pages/Login/index.js","App.js","index.js"],"names":["defaultData","Immutable","Map","loading","loaded","data","error","defaultErrorMsg","instance","axios","create","baseURL","timeout","interceptors","response","use","fromJS","e","console","log","status","window","location","href","message","Promise","reject","Loading","id","className","state","fetchLog","silence","props","setState","Request","get","params","then","finally","this","logInterval","setInterval","clearInterval","width","visible","footer","onCancel","onClose","PureComponent","Header","Layout","Footer","Content","defaultLog","gitlibList","porcessList","systemInfo","gitlibCols","title","dataIndex","render","text","record","index","onChange","onChangeBranch","target","value","mouseEnterDelay","onClick","switchBranch","BranchesOutlined","processCols","key","pm2_env","date","Date","pm_uptime","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","monit","cpu","memory","toFixed","pm_id","name","processAction","StopOutlined","PlayCircleOutlined","ReloadOutlined","onConfirm","okText","cancelText","DeleteOutlined","onLogVisible","CoffeeOutlined","refresh","fetchSystemInfo","fetchProcess","fetchGitlib","restart","duration","content","setTimeout","reload","logout","action","success","setIn","post","toJS","set","icon","RetweetOutlined","type","danger","LogoutOutlined","dangerouslySetInnerHTML","__html","rowKey","pagination","columns","dataSource","List","FormItem","Form","Item","formItemLayout","labelCol","span","wrapperCol","Login","useState","username","setUsername","passwd","setPasswd","label","placeholder","App","path","exact","component","Home","LoginPage","visibilityHeight","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.846145be.chunk.js","sourcesContent":["import Immutable from 'immutable';\n\nexport const  defaultData = Immutable.Map({\n    loading: false,\n    loaded: false,\n    data: null,\n    error: null\n});\n\nexport const defaultErrorMsg = {\n    network: 'network error!',\n    system: 'system error!'\n}\n\n","import axios from 'axios';\nimport Immutable from 'immutable';\nimport { message } from 'antd';\nimport { defaultErrorMsg } from './constants';\n\nconst instance = axios.create({\n    baseURL: '//10.99.110.115:9000',\n    timeout: 10000,\n});\n\n// 添加响应拦截器\ninstance.interceptors.response.use(function (response) {\n    // console.log(response)\n    const data = response.data;\n    return typeof data === 'string' ? data : Immutable.fromJS(data);\n}, function (e) {\n    console.log(e);\n    try {   \n        const  { response={} } = e;\n        console.log(response)\n        const { status } = response;\n        if(status===401) {\n            window.location.href = '/login';\n        }\n        return \n    }catch(e) {\n        console.log(e);\n    }\n    message.error(defaultErrorMsg.system);\n    return Promise.reject(e);\n});\n\n\nexport default instance ","import React from 'react';\nimport './style.scss';\n\nconst Loading = () => (\n    <div id=\"loader\">\n        <div className=\"sk-wave\">\n            <div className=\"sk-rect sk-rect1\"></div>\n            <div className=\"sk-rect sk-rect2\"></div>\n            <div className=\"sk-rect sk-rect3\"></div>\n            <div className=\"sk-rect sk-rect4\"></div>\n            <div className=\"sk-rect sk-rect5\"></div>\n        </div>\n    </div>\n)\n\nexport default Loading ","import React, { PureComponent } from 'react';\nimport { Modal } from 'antd';\nimport Loading from '../Loading';\nimport Request from '../../util/request';\nimport './style.scss';\n\nexport default class extends PureComponent {\n\n    state ={\n        loading: false,\n        log: ''\n    }\n\n    componentDidMount() {\n        console.log('componentDidMount');\n        this.fetchLog();\n        window.logInterval = window.setInterval(()=>{\n            console.log('fetch log...')\n            this.fetchLog(true)\n        },5000)\n    }\n\n    componentWillUnmount() {\n        console.log('componentWillUnmount')\n        window.clearInterval(window.logInterval);\n    }\n\n    fetchLog = (silence = false) => {\n        const { id }=this.props;\n        console.log(id)\n        this.setState({\n            loading: !silence\n        }, () => {\n            Request.get(`/log2`, { params: { id } }).then(data => {\n                this.setState({\n                    log: data\n                })\n            }).finally(() => {\n                this.setState({\n                    loading: false\n                });\n            })\n        });\n    }\n\n    render() {\n        const { log,loading } = this.state;\n        return <Modal\n            width=\"80%\"\n            visible={true}\n            footer={null}\n            onCancel = { this.props.onClose }\n        >   \n            {\n                loading && <Loading />\n            }\n            <div className=\"code\">\n                <pre>\n                    {log}\n                </pre>\n            </div>\n        </Modal>\n    }\n}\n","import React, { PureComponent } from 'react';\nimport { Layout, Button, Table, Input, message, Popconfirm, Tooltip } from 'antd';\nimport Request from '../../util/request';\nimport { defaultData } from '../../util/constants';\nimport Loading from '../../components/Loading';\nimport Log from '../../components/Log';\nimport Immutable from 'immutable';\nimport { DeleteOutlined, CoffeeOutlined, ReloadOutlined, StopOutlined, PlayCircleOutlined, BranchesOutlined, LogoutOutlined, RetweetOutlined } from '@ant-design/icons';\nimport './style.scss';\nconst { Header, Footer, Content } = Layout;\nconst defaultLog = Immutable.Map({\n    visible: false,\n    id: null,\n});\n\nexport default class extends PureComponent {\n\n    state = {\n        loading: false,\n        log: defaultLog,\n        gitlibList: defaultData,\n        porcessList: defaultData,\n        systemInfo: defaultData,\n    }\n\n    gitlibCols = [\n        {\n            width: 30,\n            title: 'Index',\n            dataIndex: 'name',\n            render: (text, record, index) => index + 1\n        },\n        {\n            title: 'Name',\n            dataIndex: 'name',\n        },\n        {\n            title: 'Client',\n            dataIndex: 'client',\n        },\n        {\n            title: 'Branch',\n            dataIndex: 'branch',\n            render: (text, record, index) => <Input onChange={(e) => { this.onChangeBranch(e.target.value, index) }} value={text} />\n        },\n        {\n            title: 'Desc',\n            dataIndex: 'desc',\n        },\n        {\n            title: 'Action',\n            dataIndex: 'name',\n            render: (text) => {\n                return <Tooltip\n                    title=\"Switch Branch\"\n                    mouseEnterDelay={1}\n                >\n                    <span onClick={this.switchBranch} className=\"action-btn\">\n                        <BranchesOutlined />\n                    </span>\n                </Tooltip>\n            }\n        },\n    ]\n    \n    processCols = [\n        {\n            width: 30,\n            title: 'Index',\n            dataIndex: 'name',\n            render: (text, record, index) => index + 1\n        },\n        {\n            title: 'Name',\n            dataIndex: 'name',\n        },\n        {\n            title: 'Task ID',\n            dataIndex: 'pm_id',\n        },\n        {\n            title: 'PID',\n            dataIndex: 'pid',\n            key: 'pid',\n        },\n        {\n            title: 'Status',\n            dataIndex: 'pm2_env',\n            render: (pm2_env) => pm2_env.status\n        },\n        {\n            title: 'Uptime',\n            dataIndex: 'pm2_env',\n            render: (pm2_env) => {\n                const date = new Date(pm2_env.pm_uptime);\n                return `\n                        ${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()} \n                        ${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}\n                    `\n            }\n        },\n        {\n            title: 'CPU',\n            dataIndex: 'monit',\n            render: (monit) => `${monit.cpu}%`\n        },\n        {\n            title: 'Memory',\n            dataIndex: 'monit',\n            render: (monit) => `${(monit.memory / (1024 * 1024)).toFixed(2)}MB`\n        },\n        {\n            title: 'Action',\n            dataIndex: 'pm_id',\n            render: (pm_id, record) => {\n                return <>\n                    {\n                        record.pm2_env.status === 'online'\n                        && record.name !== 'monitor'\n                        && <Tooltip\n                            title=\"Stop\"\n                            mouseEnterDelay={1}\n                        >\n                            <span\n                                onClick={() => { this.processAction('stop', pm_id) }}\n                                className=\"action-btn\">\n                                <StopOutlined />\n                            </span>\n                        </Tooltip>\n                    }\n                    {\n                        record.pm2_env.status !== 'online' && record.name !== 'monitor'\n                        && <Tooltip\n                            title=\"Start\"\n                            mouseEnterDelay={1}\n                        >\n                            <span\n                                onClick={() => { this.processAction('start', pm_id) }}\n                                className=\"action-btn\">\n                                <PlayCircleOutlined />\n                            </span>\n                        </Tooltip>\n                    }\n                    <Tooltip\n                        title=\"Restart\"\n                        mouseEnterDelay={1}\n                    >\n                        <span\n                            onClick={() => { this.processAction('restart', pm_id) }}\n                            className=\"action-btn\">\n                            <ReloadOutlined />\n                        </span>\n                    </Tooltip>\n                    {\n                        record.name !== 'monitor'\n                        && <Tooltip\n                            title=\"Delete\"\n                            mouseEnterDelay={1}\n                        >\n                            <Popconfirm\n                                title=\"Are you sure delete this task?\"\n                                onConfirm={() => { this.processAction('delete', pm_id) }}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                            >\n                                <span className=\"action-btn\"> <DeleteOutlined /> </span>\n                            </Popconfirm>\n                        </Tooltip>\n                    }\n                    <Tooltip\n                        title=\"Log\"\n                        mouseEnterDelay={1}\n                    >\n                        <span\n                            onClick={() => { this.onLogVisible(true, pm_id) }}\n                            className=\"action-btn\">\n                            <CoffeeOutlined />\n                        </span>\n                    </Tooltip>\n                </>\n            }\n        }\n    ]\n\n    componentDidMount() {\n        this.refresh();\n    }\n\n    // 刷新页面所有数据\n    refresh = () => {\n        this.fetchSystemInfo();\n        this.fetchProcess();\n        this.fetchGitlib();\n    }\n\n    // 重启服务器\n    restart = () => {\n        Request.get('/reboot');\n        const key = 'restartMessage'\n        message.loading({\n            key,\n            duration: 30,\n            content: 'Restarting... It takes about 30 seconds。',\n        });\n        setTimeout(() => {\n            window.location.reload();\n        }, 30000);;\n    }\n\n    // 退出登陆\n    logout = () => {\n        this.setState({\n            loading: true\n        },()=>{\n            Request.get('/logout').finally(() => {\n                this.setState({\n                    loading: false\n                });\n            });\n        })\n        \n    }\n\n    // 执行进行操作\n    processAction = (action, id) => {\n        this.setState({\n            loading: true\n        }, () => {\n            Request.get(`/${action}`, { params: { id } }).then(data => {\n                message.success('Operate Successfully!');\n                this.fetchProcess();\n            }).finally(() => {\n                this.setState({\n                    loading: false\n                })\n            })\n        });\n    }\n\n    // 修改分支\n    onChangeBranch = (value, index) => {\n        const { gitlibList } = this.state;\n        this.setState({\n            gitlibList: gitlibList.setIn(['data', index, 'branch'], value)\n        })\n    }\n\n    // 切换分支 \n    switchBranch = () => {\n        this.setState({\n            loading: true\n        }, () => {\n            Request.post('/updateGitConfig', this.state.gitlibList.get('data').toJS()).then(data => {\n                message.success('Switch Branch Success!')\n                this.fetchGitlib();\n            }).finally(() => {\n                this.setState({\n                    loading: false\n                });\n            })\n        });\n    }\n\n    // 获取服务系统信息\n    fetchSystemInfo = () => {\n        const { systemInfo } = this.state;\n        this.setState({\n            systemInfo: systemInfo.set('loading', true)\n        }, () => {\n            Request.get('/getSystemInfo').then(data => {\n                this.setState({\n                    systemInfo: systemInfo.set('data', data).set('loaded', true).set('loading', false)\n                })\n            })\n        });\n    }\n\n    // 获取进程信息\n    fetchProcess = () => {\n        const { porcessList } = this.state;\n        this.setState({\n            porcessList: porcessList.set('loading', true)\n        }, () => {\n            Request.get('/getProccess').then(data => {\n                this.setState({\n                    porcessList: porcessList.set('data', data).set('loaded', true).set('loading', false)\n                })\n            })\n        });\n    }\n\n    // 获取gitlib仓库信息\n    fetchGitlib = () => {\n        const { gitlibList } = this.state;\n        this.setState({\n            gitlibList: gitlibList.set('loading', true)\n        }, () => {\n            Request.get('/getGitConfig').then(data => {\n                this.setState({\n                    gitlibList: gitlibList.set('data', data).set('loaded', true).set('loading', false)\n                })\n            })\n        });\n    }\n\n    // 控制日志组件显示状态\n    onLogVisible = (visible = false, id = null) => {\n        console.log(visible, id)\n        const { log } = this.state;\n        this.setState({\n            log: log.set('visible', visible).set('id', id)\n        })\n    }\n\n    render() {\n        const { systemInfo, porcessList, gitlibList, loading, log } = this.state;\n\n        return (\n            <>\n                {\n                    (\n                        loading\n                        || systemInfo.get('loading')\n                        || porcessList.get('loading')\n                    )\n                    && <Loading\n                    />\n                }\n\n                {\n                    log.get('visible') && <Log\n                        id={log.get('id')}\n                        onClose={() => { this.onLogVisible(false) }}\n                    />\n                }\n                <Layout>\n                    <Header>\n                        <h1 className=\"header-title\">Welcome To E-learning FE CI Monitor</h1>\n                        <div className=\"header-command\">\n                            <Button icon={<RetweetOutlined />} type=\"primary\" onClick={this.refresh}>Refresh</Button>\n\n                            <Popconfirm\n                                title=\"Are you sure restart server?\"\n                                onConfirm={this.restart}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                            >\n                                <Button icon={<ReloadOutlined />} type=\"primary\" danger>Restart</Button>\n                            </Popconfirm>\n\n                            <Button onClick={this.logout} icon={<LogoutOutlined />}>Logout</Button>\n\n                        </div>\n                    </Header>\n                    <Content className={'content'}>\n                        {\n                            <div\n                                id=\"systemInfo\"\n                                dangerouslySetInnerHTML={{ __html: systemInfo.get('data') }}\n                                className=\"system-info\"\n                            />\n                        }\n                        {\n                            porcessList.get('loaded') && <>\n                                <h1>Process List</h1>\n                                <Table\n                                    rowKey=\"pid\"\n                                    pagination={false}\n                                    columns={this.processCols}\n                                    dataSource={porcessList.get('data', Immutable.List()).toJS()}\n                                />\n                            </>\n                        }\n                        {\n                            gitlibList.get('loaded') && <>\n                                <h1>Gitlab Repositories</h1>\n                                <Table\n                                    rowKey=\"name\"\n                                    pagination={false}\n                                    columns={this.gitlibCols}\n                                    dataSource={gitlibList.get('data', Immutable.List()).toJS()}\n                                />\n                            </>\n                        }\n                    </Content>\n                    <Footer>\n                        E-learning FE CI Monitor copyright © 2020   |    zhongpeizhi@beisen.com\n                    </Footer>\n                </Layout>\n            </>\n        )\n    }\n}","import React, { useState} from 'react';\nimport { Form, Input, Layout, Button } from 'antd';\nimport Loading from '../../components/Loading';\nimport Request from '../../util/request';\nimport './style.scss';\nconst FormItem = Form.Item;\n\nconst formItemLayout = {\n    labelCol: { span: 6 },\n    wrapperCol: { span: 16 }\n};\n\n\n\nconst Login = () => {\n\n    const [username, setUsername] = useState('');\n    const [passwd, setPasswd] = useState('');\n\n    const login = () => {\n        \n        Request.post('/loginCheck', {\n            username,\n            passwd,\n        }).then(data=>{\n            window.location.href='/'\n        });\n    };\n\n    return (\n        <div className=\"login\">\n            {/* <Loading /> */}\n            <Layout.Header>\n                <h1>Welcome To E-learning FE CI Monitor</h1>\n            </Layout.Header>\n            <div className=\"form\">\n                <Form>\n                    <FormItem {...formItemLayout} label={\"Username\"}>\n                        <Input \n                            placeholder=\"Username\" \n                            onChange = {(e)=>{\n                                setUsername(e.target.value)\n                            }} \n                            value={username}  \n                        />\n                    </FormItem>\n                    <FormItem {...formItemLayout} label={\"Password\"}>\n                        <Input \n                            placeholder=\"Password\" \n                            type=\"password\"\n                            onChange={(e) => {\n                                setPasswd(e.target.value)\n                            }}\n                            value={passwd}  \n                        />\n                    </FormItem>\n                </Form>\n                {/* <button onClick={login} type=\"button\" class=\"ant-btn SignIn ant-btn-primary\"><span>Sign In</span></button>\n             */}\n                <Button onClick={login}>Sign In</Button>\n            </div>\n        </div>\n    ) \n}\nexport default Login","import React from 'react';\nimport Home from './pages/Home';\nimport LoginPage from './pages/Login';\nimport { BackTop } from 'antd';\nimport { BrowserRouter, Route } from \"react-router-dom\";\n\nimport './App.scss';\n\nconst App = () => (\n  <div className=\"App\">\n    <BrowserRouter>\n      <Route path=\"/\" exact={true} component={Home} />\n      <Route path=\"/login\" component={LoginPage} />\n    </BrowserRouter>\n    <BackTop \n      visibilityHeight = {50}\n    />\n  </div>\n);\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}